/**
  @file dg376_main.h
  @author Deliang Yang
  @date_created 2020-06-20
  @last_update N/A
  @version 0.1
  @brief The actual main.h for this project.
  @details The main.h generated by STM32CubeMX is always contaminated every now
  and then. I would like to isolate it from other files.

*/
#ifndef DG376_MAIN_H
#define DG376_MAIN_H

#include "main.h"
#include "stm32l0xx_hal.h"

#define LED0_ON HAL_GPIO_WritePin(LED_0_GPIO_Port, LED_0_Pin, GPIO_PIN_SET)
#define LED0_OFF HAL_GPIO_WritePin(LED_0_GPIO_Port, LED_0_Pin, GPIO_PIN_RESET)
#define LED1_ON HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_SET)
#define LED1_OFF HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_RESET)
#define LED2_ON HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_SET)
#define LED2_OFF HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_RESET)
#define LED3_ON HAL_GPIO_WritePin(LED_3_GPIO_Port, LED_3_Pin, GPIO_PIN_SET)
#define LED3_OFF HAL_GPIO_WritePin(LED_3_GPIO_Port, LED_3_Pin, GPIO_PIN_RESET)
#define LED4_ON HAL_GPIO_WritePin(LED_4_GPIO_Port, LED_4_Pin, GPIO_PIN_SET)
#define LED4_OFF HAL_GPIO_WritePin(LED_4_GPIO_Port, LED_4_Pin, GPIO_PIN_RESET)

#define LED0_TOGGLE HAL_GPIO_TogglePin(LED_0_GPIO_Port, LED_0_Pin)
#define LED1_TOGGLE HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin)
#define LED2_TOGGLE HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin)
#define LED3_TOGGLE HAL_GPIO_TogglePin(LED_3_GPIO_Port, LED_3_Pin)
#define LED4_TOGGLE HAL_GPIO_TogglePin(LED_4_GPIO_Port, LED_4_Pin)

#define LED_R_ON HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_SET)
#define LED_R_OFF HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_RESET)
#define LED_G_ON HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_SET)
#define LED_G_OFF HAL_GPIO_WritePin(LED_G_GPIO_Port, LED_G_Pin, GPIO_PIN_RESET)
#define LED_B_ON HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_SET)
#define LED_B_OFF HAL_GPIO_WritePin(LED_B_GPIO_Port, LED_B_Pin, GPIO_PIN_RESET)

#define MOTOR_ON                                                               \
  HAL_GPIO_WritePin(MOTOR_CTRL_GPIO_Port, MOTOR_CTRL_Pin, GPIO_PIN_SET)
#define MOTOR_OFF                                                              \
  HAL_GPIO_WritePin(MOTOR_CTRL_GPIO_Port, MOTOR_CTRL_Pin, GPIO_PIN_RESET)

typedef struct {
  uint8_t s_10_enable;
  uint8_t s_20_enable;
  uint8_t s_30_enable;
  uint8_t s_60_enable;
} timer_choice_t;

typedef struct {
  uint8_t vibration_enable;
  uint8_t rgb_enable;
} notification_choice_t;

typedef enum { STATE_IDLE, STATE_TIMER_ON, STATE_NOTIFYING } dg376_status_et;

/**
   @brief Read in the timer settings from the DIP switch.
   @param None.
   @return None.
   @note Will change the global value directly.
*/
void read_timer_choice(timer_choice_t *g_timer_choice_st);

/**
   @brief Calculate the incremental step of the timer.
   @param *g_timer_choice_st.
   @return uint8t, range: 1 - 120
   @note Will be called after pressing +1
*/
uint8_t calulate_incremental_step(timer_choice_t *g_timer_choice_st);

/**
   @brief Read in the notification settings from the DIP switch.
   @param None.
   @return None.
   @note Will change the global value directly.
*/
void read_notification_choice(notification_choice_t *g_notification_st);

/**
   @brief Turn off all LED.
   @param None.
   @return None.
   @note For reset button
*/
void turn_off_all_led(void);

/**
   @brief Light-up LED based on count
   @param None. (led_on_count global variable)
   @return None
   @note Press +1 key, there will be one more led on.
*/
void turn_on_led_based_on_count(void);


/**
   @brief Start notification. RGB LED | Vibration | LED Blinking
   @param None.
   @return None.
   @note Use different ways of notification according to settings.
*/
void start_notification(void);

/**
   @brief Timer expired, perform some tasks.
   @param None.
   @return None.
   @note This is called when remain_timer becomes 0.
*/
void time_expired(void);


/**
   @brief Infinite loop
   @param None
   @return None
   @note Replace the original while 1 loop in main.c
*/
void dg376_while_loop(void);
#endif /* DG376_MAIN_H */
